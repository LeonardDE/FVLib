%!PS-Adobe-2.0 EPSF-2.0
%%Title: default_path_prokladka_position.eps
%%Creator: gnuplot 6.0 patchlevel 0
%%CreationDate: Wed May 01 08:34:45 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% encoding for code page cp1251 (8-bit Russian)
% version 1.0:  - Mainly letters are mapped. The following positions
% (JFi)           are left blank (undefined):
%               -- first 32 positions,
%               -- frame characters,
%               -- a few special characters.

/reencodeCP1251 {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
CharStrings /Idieresis known {
/Encoding CP1251Encoding def } if
} if
currentdict end definefont
} def
/CP1251Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/afii10051 /afii10052 /quotesinglbase /afii10100 /quotedblbase /ellipsis /dagger /daggerdbl
/Euro /perthousand /afii10058 /guilsinglleft /afii10059 /afii10061 /afii10060 /afii10145
/afii10099 /quoteleft /quoteright /quotedblleft /quotedblright /bullet /endash /emdash
/.notdef /trademark /afii10106 /guilsinglright /afii10107 /afii10109 /afii10108 /afii10193
/space /afii10062 /afii10110 /afii10057 /currency /afii10050 /brokenbar /section
/afii10023 /copyright /afii10053 /guillemotleft /logicalnot /hyphen /registered /afii10056
/degree /plusminus /afii10055 /afii10103 /afii10098 /mu /paragraph /periodcentered
/afii10071 /afii61352 /afii10101 /guillemotright /afii10105 /afii10054 /afii10102 /afii10104
/afii10017 /afii10018 /afii10019 /afii10020 /afii10021 /afii10022 /afii10024 /afii10025
/afii10026 /afii10027 /afii10028 /afii10029 /afii10030 /afii10031 /afii10032 /afii10033
/afii10034 /afii10035 /afii10036 /afii10037 /afii10038 /afii10039 /afii10040 /afii10041
/afii10042 /afii10043 /afii10044 /afii10045 /afii10046 /afii10047 /afii10048 /afii10049
/afii10065 /afii10066 /afii10067 /afii10068 /afii10069 /afii10070 /afii10072 /afii10073
/afii10074 /afii10075 /afii10076 /afii10077 /afii10078 /afii10079 /afii10080 /afii10081
/afii10082 /afii10083 /afii10084 /afii10085 /afii10086 /afii10087 /afii10088 /afii10089
/afii10090 /afii10091 /afii10092 /afii10093 /afii10094 /afii10095 /afii10096 /afii10097
] def

/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeCP1251 def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (default_path_prokladka_position.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 6.0 patchlevel 0)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed May 01 08:34:45 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1860 480 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 480 M
[ [(Helvetica) 240.0 0.0 true true 0 (-10)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
/vshift -80 def
1.000 UL
LTb
LCb setrgbcolor
1860 992 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 992 M
[ [(Helvetica) 240.0 0.0 true true 0 (-8)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1860 1504 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 1504 M
[ [(Helvetica) 240.0 0.0 true true 0 (-6)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1860 2016 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 2016 M
[ [(Helvetica) 240.0 0.0 true true 0 (-4)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1860 2527 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 2527 M
[ [(Helvetica) 240.0 0.0 true true 0 (-2)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1860 3039 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 3039 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1860 3551 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 3551 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1860 4063 M
63 0 V
3776 0 R
-63 0 V
stroke
1716 4063 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1860 480 M
0 63 V
0 3776 R
0 -63 V
stroke
1860 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2372 480 M
0 63 V
0 3776 R
0 -63 V
stroke
2372 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2884 480 M
0 63 V
0 3776 R
0 -63 V
stroke
2884 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3396 480 M
0 63 V
0 3776 R
0 -63 V
stroke
3396 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3907 480 M
0 63 V
0 3776 R
0 -63 V
stroke
3907 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 8)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4419 480 M
0 63 V
0 3776 R
0 -63 V
stroke
4419 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 10)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4931 480 M
0 63 V
0 3776 R
0 -63 V
stroke
4931 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 12)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5443 480 M
0 63 V
0 3776 R
0 -63 V
stroke
5443 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 14)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1860 4319 N
0 -3839 V
3839 0 V
0 3839 V
-3839 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
4628 4136 M
[ [(Helvetica) 240.0 0.0 true true 0 (path)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
0.58 0.00 0.83 C
4772 4136 M
639 0 V
1860 3039 M
2559 0 V
0 -1279 V
5699 480 L
% End plot #1
% Begin plot #2
stroke
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
4628 3896 M
[ [(Helvetica) 240.0 0.0 true true 0 (turn path XZ)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
1.000 UL
LTb
0.00 0.62 0.45 C
4772 3896 M
639 0 V
1860 3039 M
28 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
26 0 V
26 0 V
25 0 V
26 0 V
25 0 V
25 0 V
13 0 V
14 0 V
13 -1 V
13 -2 V
14 -1 V
13 -2 V
13 -2 V
13 -3 V
13 -3 V
13 -3 V
13 -4 V
13 -4 V
13 -4 V
12 -5 V
13 -5 V
12 -5 V
12 -6 V
12 -6 V
12 -6 V
12 -7 V
11 -7 V
11 -7 V
11 -7 V
11 -8 V
11 -8 V
11 -9 V
10 -8 V
10 -9 V
10 -9 V
9 -10 V
10 -9 V
9 -10 V
9 -10 V
8 -10 V
8 -11 V
8 -11 V
8 -11 V
7 -11 V
8 -11 V
6 -12 V
7 -11 V
6 -12 V
6 -12 V
6 -13 V
5 -12 V
5 -12 V
4 -13 V
5 -13 V
4 -12 V
3 -13 V
4 -13 V
2 -13 V
3 -14 V
2 -13 V
2 -13 V
2 -13 V
1 -14 V
1 -13 V
0 -13 V
0 -14 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -12 V
0 -13 V
0 -13 V
0 -13 V
0 -13 V
0 -14 V
2 -17 V
5 -18 V
6 -16 V
9 -16 V
11 -14 V
21 -21 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
25 -25 V
26 -26 V
26 -26 V
25 -25 V
26 -26 V
stroke 5625 554 M
25 -25 V
26 -26 V
% End plot #2
% Begin plot #3
0.200 UP
stroke
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
4628 3656 M
[ [(Helvetica) 240.0 0.0 true true 0 (position)]
] -80.0 MRshow
/Helvetica findfont 240 scalefont setfont
0.200 UP
1.000 UL
LTb
0.34 0.71 0.91 C
1860 3039 BoxF
1861 3039 BoxF
1865 3039 BoxF
1872 3039 BoxF
1881 3039 BoxF
1892 3039 BoxF
1906 3039 BoxF
1922 3039 BoxF
1940 3039 BoxF
1960 3039 BoxF
1982 3039 BoxF
2005 3039 BoxF
2030 3039 BoxF
2057 3039 BoxF
2084 3039 BoxF
2113 3039 BoxF
2143 3039 BoxF
2174 3039 BoxF
2205 3039 BoxF
2237 3039 BoxF
2270 3039 BoxF
2302 3039 BoxF
2336 3039 BoxF
2369 3039 BoxF
2402 3039 BoxF
2436 3039 BoxF
2469 3039 BoxF
2502 3039 BoxF
2535 3039 BoxF
2568 3039 BoxF
2600 3039 BoxF
2632 3039 BoxF
2664 3039 BoxF
2695 3039 BoxF
2726 3039 BoxF
2757 3039 BoxF
2787 3039 BoxF
2817 3039 BoxF
2846 3039 BoxF
2875 3039 BoxF
2903 3039 BoxF
2931 3039 BoxF
2959 3039 BoxF
2986 3039 BoxF
3013 3039 BoxF
3039 3039 BoxF
3066 3039 BoxF
3091 3039 BoxF
3117 3039 BoxF
3143 3039 BoxF
3168 3039 BoxF
3193 3039 BoxF
3218 3039 BoxF
3243 3039 BoxF
3267 3039 BoxF
3292 3039 BoxF
3316 3039 BoxF
3341 3039 BoxF
3365 3039 BoxF
3389 3039 BoxF
3414 3039 BoxF
3438 3039 BoxF
3462 3039 BoxF
3487 3039 BoxF
3511 3039 BoxF
3535 3039 BoxF
3560 3039 BoxF
3584 3039 BoxF
3609 3039 BoxF
3634 3039 BoxF
3658 3039 BoxF
3683 3039 BoxF
3708 3039 BoxF
3733 3039 BoxF
3758 3039 BoxF
3783 3039 BoxF
3808 3039 BoxF
3833 3039 BoxF
3858 3039 BoxF
3884 3039 BoxF
3909 3039 BoxF
3934 3039 BoxF
3960 3039 BoxF
3985 3039 BoxF
4010 3039 BoxF
4034 3038 BoxF
4058 3037 BoxF
4081 3036 BoxF
4103 3034 BoxF
4125 3032 BoxF
4146 3030 BoxF
4166 3027 BoxF
4185 3024 BoxF
4204 3020 BoxF
4221 3016 BoxF
4238 3011 BoxF
4254 3006 BoxF
4269 3000 BoxF
4283 2994 BoxF
4296 2988 BoxF
4308 2981 BoxF
4320 2973 BoxF
4331 2965 BoxF
4341 2957 BoxF
4350 2948 BoxF
4359 2939 BoxF
4367 2929 BoxF
4375 2919 BoxF
4382 2909 BoxF
4388 2899 BoxF
4394 2888 BoxF
4400 2877 BoxF
4405 2865 BoxF
4410 2854 BoxF
4414 2842 BoxF
4418 2830 BoxF
4422 2818 BoxF
4425 2806 BoxF
4428 2793 BoxF
4431 2781 BoxF
4434 2768 BoxF
4436 2756 BoxF
4438 2743 BoxF
4440 2730 BoxF
4442 2717 BoxF
4444 2704 BoxF
4445 2691 BoxF
4447 2678 BoxF
4448 2665 BoxF
4449 2653 BoxF
4450 2640 BoxF
4450 2627 BoxF
4451 2614 BoxF
4451 2601 BoxF
4451 2588 BoxF
4451 2576 BoxF
4451 2563 BoxF
4451 2550 BoxF
4450 2538 BoxF
4449 2526 BoxF
4448 2513 BoxF
4447 2501 BoxF
4446 2489 BoxF
4445 2476 BoxF
4443 2464 BoxF
4442 2452 BoxF
4440 2440 BoxF
4438 2428 BoxF
4437 2416 BoxF
4435 2404 BoxF
4433 2392 BoxF
4431 2379 BoxF
4430 2367 BoxF
4428 2355 BoxF
4427 2343 BoxF
4425 2331 BoxF
4424 2319 BoxF
4423 2306 BoxF
4421 2294 BoxF
4420 2282 BoxF
4419 2269 BoxF
4418 2257 BoxF
4418 2244 BoxF
4417 2232 BoxF
4416 2219 BoxF
4416 2207 BoxF
4415 2194 BoxF
4415 2181 BoxF
4415 2169 BoxF
4414 2156 BoxF
4414 2143 BoxF
4414 2130 BoxF
4414 2118 BoxF
4414 2105 BoxF
4414 2092 BoxF
4414 2079 BoxF
4414 2066 BoxF
4415 2053 BoxF
4415 2040 BoxF
4415 2028 BoxF
4415 2015 BoxF
4416 2002 BoxF
4416 1989 BoxF
4416 1976 BoxF
4416 1963 BoxF
4417 1950 BoxF
4417 1937 BoxF
4417 1924 BoxF
4418 1911 BoxF
4418 1898 BoxF
4418 1886 BoxF
4418 1873 BoxF
4419 1860 BoxF
4419 1847 BoxF
4419 1834 BoxF
4419 1821 BoxF
4419 1808 BoxF
4420 1795 BoxF
4420 1782 BoxF
4421 1767 BoxF
4423 1752 BoxF
4427 1736 BoxF
4433 1718 BoxF
4441 1700 BoxF
4451 1681 BoxF
4464 1660 BoxF
4479 1640 BoxF
4495 1618 BoxF
4514 1595 BoxF
4534 1572 BoxF
4556 1548 BoxF
4579 1523 BoxF
4604 1498 BoxF
4630 1473 BoxF
4658 1446 BoxF
4686 1420 BoxF
4715 1393 BoxF
4745 1366 BoxF
4776 1338 BoxF
4807 1310 BoxF
4839 1282 BoxF
4871 1254 BoxF
4903 1226 BoxF
4936 1198 BoxF
4968 1169 BoxF
5001 1141 BoxF
5034 1112 BoxF
5066 1084 BoxF
5098 1056 BoxF
5130 1028 BoxF
5162 1000 BoxF
5193 972 BoxF
5225 944 BoxF
5255 916 BoxF
5286 888 BoxF
5316 861 BoxF
5346 834 BoxF
5375 807 BoxF
5404 780 BoxF
5432 753 BoxF
5460 726 BoxF
5488 700 BoxF
5516 673 BoxF
5543 647 BoxF
5570 621 BoxF
5596 595 BoxF
5622 569 BoxF
5648 543 BoxF
5674 518 BoxF
5091 3656 BoxF
% End plot #3
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1860 4319 N
0 -3839 V
3839 0 V
0 3839 V
-3839 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
3779 4679 M
[ [(Helvetica) 240.0 0.0 true true 0 (path AND position)]
] -80.0 MCshow
/Helvetica findfont 240 scalefont setfont
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
